#
# Ubuntu Dockerfile
#
# https://github.com/dockerfile/ubuntu
#

# Pull base image.
FROM ubuntu:18.04

MAINTAINER Netzulo.com

LABEL version="0.0.4"
LABEL vendor="Netzulo OpenSource Development"
LABEL release-date="2018-09-04"
LABEL version.is-production=""

# ENVironment variables
ENV DEBIAN_FRONTEND noninteractive
ENV HOME /root
ENV TL_DB_HOST localhost
ENV TL_DB_PORT 3306
ENV TL_DB_USER root

# Update SO
RUN apt-get update && \
  apt-get install -y software-properties-common systemd && \
  apt-get clean && \
# Install
  apt-get install -y curl git htop man unzip vim wget telnet net-tools iputils-ping && \
# ~ install testlink webserver
  apt-get install -y php php-cli php-pear php-fpm php-dev php-zip php-curl php-xmlrpc php-gd php-mysql php-mbstring php-xml libapache2-mod-php php-cgi nginx && \
# ~ install testlink database
  apt-get install -y mariadb-server mariadb-client mycli

# Add files
## Starting script
ADD root/entrypoint.sh /root/entrypoint.sh
## default configuration for webserver
ADD root/default-nginx /etc/nginx/sites-available/default
ADD root/nginx.service /lib/systemd/system/nginx.service
### Fix for nginx-php
RUN mkdir -p /run/php/ && touch /run/php/php7.2-fmp.sock
## default configuration for git
ADD root/.gitconfig /root/.gitconfig
## Config for MariaDB
ADD root/mariadb.cnf /etc/mysql/mariadb.conf.d/50-server.cnf
ADD root/db_create_users.sh /root/db_create_users.sh

# Clone testlink repository
RUN \
  mkdir -p /var/www && \
  cd /var/www && \
  git clone -b testlink_1_9 https://github.com/netzulo/testlink-code

# Configure for Testlink first install 
RUN \
  mkdir -p /var/testlink/logs && \
  mkdir -p /var/testlink/upload_area && \
  chown -R www-data:www-data /var/testlink/logs && \
  chown -R www-data:www-data /var/testlink/upload_area && \
  chown -R www-data:www-data /var/www/testlink-code/gui/templates_c

# Define working directory
WORKDIR /root

# Expose ports for nginx ( just documented, not neccessary )
EXPOSE 80/tcp
EXPOSE 80/udp
# Expose ports for mysql ( just documented, not neccessary )
EXPOSE 3306/tcp
EXPOSE 3306/udp

# Start new container
RUN chmod 755 /root/entrypoint.sh
CMD ['/bin/bash /root/entrypoint.sh']

